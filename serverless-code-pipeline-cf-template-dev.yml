AWSTemplateFormatVersion: 2010-09-09

Description: 'This solution allows you to create a AWS Codepipline for deploying a serverless application with AWS CodeBuild triggered by a Github repo commit. The setup of this solution is fully automated via a CloudFormation template.'

Parameters:
  Environment:
    AllowedValues:
    - dev
    - prod
    Description: 'Environment'
    Type: 'String'
    Default: 'dev'

  CodePipelineBucketPrefix:
    Description: CodePipeline needs a utility bucket for its internal use. Specify a unique prefix for the bucket name
    Type: String
    Default: a206448-codepipeline-swaraj-

  GitHubRepository:
    Type: String
    Default: Swaraj-github/a206448-cicd-pipeline-listener-sandbox/master
    Description:  owner/repository/branch

  GitHubOAuthToken:
    Type: String
    Default:  b7da512073a20820db448e935ce7b8c4eb722761
    Description:  CodePipeline requires an OAuthToken

Resources:

  S3:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join [ "", [!Ref CodePipelineBucketPrefix, !Ref 'Environment', "-", !Ref "AWS::Region"]]

  TestBuild:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: Test-Build
      Description: Demo of CodeBuild with CodeDeploy pipeline.
      ServiceRole: arn:aws:iam::962390577453:role/a206448-CodeBuildRole
      TimeoutInMinutes: 5
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Join [ "", ["buildspec", "-", !Ref 'Environment', ".yml"]]
      Environment:
        Type: "LINUX_CONTAINER"
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.1.0
      Artifacts:
        Type: CODEPIPELINE

  BuildDeploy:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: Build-Deploy
      Description: Demo of CodeBuild with CodeDeploy pipeline.
      ServiceRole: arn:aws:iam::962390577453:role/a206448-CodeBuildRole
      TimeoutInMinutes: 5
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
            version: 0.2
            phases:
              build:
                commands:
                  - bash deploy.sh
      Environment:
        Type: "LINUX_CONTAINER"
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: env
            Type: PLAINTEXT
            Value: !Ref Environment
        Image: aws/codebuild/nodejs:10.1.0
      Artifacts:
        Type: CODEPIPELINE

  # CodePipeline with its stages:
  Pipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Join [ "", ["DevOps-Pipeline", "-", !Ref 'AWS::StackName'] ]
      ArtifactStore:
        Location: !Ref S3
        Type: S3
      RestartExecutionOnUpdate: true
      RoleArn: arn:aws:iam::962390577453:role/service-role/a206448-ecpdevops-amsnovus-deploy
      Stages:

        # Stage 1:  Get the source from GitHub:
        - Name: Source
          Actions:
            - Name: SourceAction
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Select [0, !Split [ "/" , !Ref GitHubRepository ]]
                Repo: !Select [1, !Split [ "/" , !Ref GitHubRepository ]]
                Branch: !Select [2, !Split [ "/" , !Ref GitHubRepository ]]
                PollForSourceChanges: true
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: TheSourceCode

        # Stage 2:  Build using Serverless Framework
        - Name: TestBuild
          Actions:
            - Name: Test-Build
              RunOrder: 1
              InputArtifacts:
                - Name: TheSourceCode
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:  !Ref TestBuild
              OutputArtifacts:
                - Name: TheArtifact

        # Stage 3:  Build and Deploy using Serverless Framework
        - Name: BuildDeploy
          Actions:
            - Name: Build-Deploy
              RunOrder: 1
              InputArtifacts:
                - Name: TheArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:  !Ref BuildDeploy
              OutputArtifacts:
                - Name: TheArtifact2

Outputs:
  CodeBuild:
    Value: !Ref Pipeline
  Environment:
    Value: !Ref Environment
  Github:
    Value: !Ref GitHubRepository




  S3:
    Value: !Ref S3
